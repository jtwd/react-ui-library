// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInput renders correctly 1`] = `
<div
  className="sc-ifAKCX ffCDom"
>
  <label
    className="sc-bdVaJa etThJd"
    htmlFor="test"
  >
    Test
     
  </label>
  <input
    className="sc-EHOje cUJljk"
    id="test"
    name="test"
    onChange={[Function]}
    placeholder=""
    type="text"
    value={undefined}
  />
</div>
`;

exports[`TextInput renders correctly when passed an error prop 1`] = `
<div
  className="sc-ifAKCX ffCDom"
>
  <label
    className="sc-bdVaJa etThJd"
    htmlFor="test"
  >
    Test
     
    <span
      className="sc-bwzfXH dYARQs"
      title="Required field"
    />
  </label>
  <input
    className="sc-EHOje cQrQFB"
    id="test"
    name="test"
    onChange={[Function]}
    placeholder=""
    type="text"
    value={undefined}
  />
  <div
    className="sc-bxivhb krvqla"
  >
    <i
      className="sc-htpNat giXiHP"
    >
      <svg
        fill="currentColor"
        height="1em"
        preserveAspectRatio="xMidYMid meet"
        style={
          Object {
            "color": undefined,
            "verticalAlign": "middle",
          }
        }
        viewBox="0 0 40 40"
        width="1em"
      >
        <g>
          <path
            d="m24.4 27.9v5q0 0.5-0.4 1t-1 0.4h-5.7q-0.6 0-1-0.4t-0.4-1v-5q0-0.6 0.4-1t1-0.5h5.7q0.6 0 1 0.5t0.4 1z m0.7-23.6l-0.6 17.1q0 0.6-0.5 1t-1 0.5h-5.7q-0.6 0-1-0.5t-0.5-1l-0.6-17.1q0-0.6 0.4-1t1-0.4h7.1q0.6 0 1 0.4t0.4 1z"
          />
        </g>
      </svg>
    </i>
    This is a required field
  </div>
</div>
`;

exports[`TextInput renders correctly when passed required prop 1`] = `
<div
  className="sc-ifAKCX ffCDom"
>
  <label
    className="sc-bdVaJa etThJd"
    htmlFor="test"
  >
    Test
     
    <span
      className="sc-bwzfXH dYARQs"
      title="Required field"
    />
  </label>
  <input
    className="sc-EHOje cUJljk"
    id="test"
    name="test"
    onChange={[Function]}
    placeholder=""
    type="text"
    value={undefined}
  />
</div>
`;

exports[`TextInput renders correctly when passed type of email 1`] = `
<div
  className="sc-ifAKCX ffCDom"
>
  <label
    className="sc-bdVaJa etThJd"
    htmlFor="test"
  >
    Test
     
  </label>
  <input
    className="sc-EHOje cUJljk"
    id="test"
    name="test"
    onChange={[Function]}
    placeholder=""
    type="email"
    value={undefined}
  />
</div>
`;

exports[`TextInput renders correctly when passed type of number 1`] = `
<div
  className="sc-ifAKCX ffCDom"
>
  <label
    className="sc-bdVaJa etThJd"
    htmlFor="test"
  >
    Test
     
  </label>
  <input
    className="sc-EHOje cUJljk"
    id="test"
    name="test"
    onChange={[Function]}
    placeholder=""
    type="number"
    value={undefined}
  />
</div>
`;

exports[`TextInput renders correctly when passed type of password 1`] = `
<div
  className="sc-ifAKCX ffCDom"
>
  <label
    className="sc-bdVaJa etThJd"
    htmlFor="test"
  >
    Test
     
  </label>
  <input
    className="sc-EHOje cUJljk"
    id="test"
    name="test"
    onChange={[Function]}
    placeholder=""
    type="password"
    value={undefined}
  />
</div>
`;

exports[`TextInput renders correctly when passed type of tel 1`] = `
<div
  className="sc-ifAKCX ffCDom"
>
  <label
    className="sc-bdVaJa etThJd"
    htmlFor="test"
  >
    Test
     
  </label>
  <input
    className="sc-EHOje cUJljk"
    id="test"
    name="test"
    onChange={[Function]}
    placeholder=""
    type="tel"
    value={undefined}
  />
</div>
`;
